package uk.gov.hmcts.reform.demo.utils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

/**
 * Utility class for interacting with the OpenAI ChatGPT API.
 */
public class ChatGptApi {

    /**
     * Sends a prompt to the ChatGPT API and retrieves the response.
     *
     * @param prompt The input message to send to the ChatGPT API.
     * @return The response message generated by the ChatGPT API.
     * @throws RuntimeException If there is an error during communication with the API.
     */
    public static String chatGpt(String prompt) {
        String url = "https://api.openai.com/v1/chat/completions";
        String apiKey = System.getenv("CGI_OPENAI_KEY"); // Retrieves the API key from the environment variable.
        String model = "gpt-4o";

        try {
            URL obj = new URL(url);
            HttpURLConnection connection = (HttpURLConnection) obj.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Authorization", "Bearer " + apiKey);
            connection.setRequestProperty("Content-Type", "application/json");

            // The request body
            String body = "{"
                + "\"model\": \"" + model + "\", "
                + "\"messages\": [{\"role\": \"user\", \"content\": \"" + prompt + "\"}]"
                + "}";
            connection.setDoOutput(true);
            OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream());
            writer.write(body);
            writer.flush();
            writer.close();

            // Response from ChatGPT
            BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String line;

            StringBuffer response = new StringBuffer();

            while ((line = br.readLine()) != null) {
                response.append(line);
            }
            br.close();

            // Extract the content field from the JSON response.
            return extractMessageFromJsonResponse(response.toString());

        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * Extracts the "content" field from a JSON response string.
     *
     * @param response The JSON response string from the ChatGPT API.
     * @return The extracted "content" field as a string.
     */
    public static String extractMessageFromJsonResponse(String response) {
        int start = response.indexOf("content") + 11;
        int end = response.indexOf("\"", start);

        return response.substring(start, end);
    }
}
